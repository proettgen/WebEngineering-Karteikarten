{
    "folderId": "b4e2d9a3-5f6b-4c7d-8e2f-3a4b5c6d7e8f",
    "lastedLearned": "2024-01-15T10:30:00.000Z",
    "cards": [
        {
            "id": "1a2b3c4d-5e6f-47ab-8c9d-0e1f2a3b4c5a",
            "title": "Introduction to JavaScript",
            "question": "What is a closure in JavaScript?",
            "answer": "A closure is the combination of a function bundled together (enclosed) with references to its surrounding state (the lexical environment).",
            "currentLearningLevel": 0,
            "createdAt": "2024-05-01T08:00:00.000Z",
            "tags": [ "javascript", "core-concepts", "frontend" ],
            "boxLevel": 0
        },
        {
            "id": "b2c3d4e5-f6a7-4b8c-9d0e-1f2a3b4c5b6b",
            "title": "React State Management",
            "question": "What is the difference between props and state in React?",
            "answer": "Props (short for properties) are read-only and passed down from parent to child components. State is managed within a component and can change over time.",
            "currentLearningLevel": 1,
            "createdAt": "2024-05-02T09:15:00.000Z",
            "tags": [ "react", "state", "props" ],
            "boxLevel": 0
        },
        {
            "id": "c3d4e5f6-a7b8-4c9d-0e1f-2a3b4c5d6c7c",
            "title": "CSS Flexbox",
            "question": "How do you center an item horizontally and vertically using Flexbox?",
            "answer": "Set the parent container to `display: flex;`, `justify-content: center;` (for horizontal centering), and `align-items: center;` (for vertical centering).",
            "currentLearningLevel": 2,
            "createdAt": "2024-05-03T11:30:00.000Z",
            "tags": null,
            "boxLevel": 0
        },
        {
            "id": "d4e5f6a7-b8c9-4d0e-1f2a-3b4c5d6e7d8d",
            "title": "Node.js Basics",
            "question": "What is the Node.js event loop?",
            "answer": "The event loop allows Node.js to perform non-blocking I/O operations — despite the fact that JavaScript is single-threaded — by offloading operations to the system kernel whenever possible.",
            "currentLearningLevel": 0,
            "createdAt": "2024-05-04T14:00:00.000Z",
            "tags": [ "nodejs" ],
            "boxLevel": 0
        },
        {
            "id": "e5f6a7b8-c9d0-4e1f-2a3b-4c5d6f7e8e9e",
            "title": "TypeScript Types",
            "question": "What is an interface in TypeScript?",
            "answer": "An interface in TypeScript is a way to define a contract for an object's shape. It specifies the names and types of properties an object should have.",
            "currentLearningLevel": 3,
            "createdAt": "2024-05-05T16:45  :00.000Z",
            "tags": [ "typescript", "types", "interface" ],
            "boxLevel": 0
        },
        {
            "id": "f6a7b8c9-d0e1-4f2a-3b4c-5d6e7f8f9f0f",
            "title": "REST API Principles",
            "question": "What does idempotent mean in the context of HTTP methods?",
            "answer": "An HTTP method is idempotent if an identical request can be made once or several times in a row with the same effect while leaving the server in the same state. GET, PUT, DELETE are idempotent.",
            "currentLearningLevel": 2,
            "createdAt": "2024-05-06T18:20:00.000Z",
            "tags": [ "api", "rest", "http" ],
            "boxLevel": 0
        }
    ],
    "learnProgress": {
        "levelZero": 2,
        "levelOne": 1,
        "levelTwo": 2,
        "levelTree": 1
    }
}